% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s4_classes.R
\name{simulatr_function}
\alias{simulatr_function}
\title{simulatr_function}
\usage{
simulatr_function(
  f,
  arg_names = NA_character_,
  packages = NA_character_,
  loop = FALSE
)
}
\arguments{
\item{f}{a function with one or more arguments.}

\item{arg_names}{the (ordered) names of parameters (from the parameter grid or list of fixed parameters) to pass to f.}

\item{packages}{packages to load before calling f, stored as a character vector.}

\item{loop}{boolean indicating whether f should be called within a loop.}
}
\value{
A \code{simulatr_function} object
}
\description{
A \code{simulator_function} is a class that stores a method or data generation function alongside associated metadata.
}
\examples{
# an example data generation function
generate_lm_data <- function(beta_0, beta_1, sigma, n) {
x <- rnorm(n)
ep <- rnorm(n, sd = sigma)
y <- beta_0 + beta_1 * x + ep
data.frame(y = y, x = x)
}
data_generator <- simulatr_function(
f = generate_lm_data,
arg_names = c("beta_0", "beta_1", "sigma", "n"),
loop = TRUE)

# an example method function
fit_lm <- function(df) {
fit <- lm(y ~ x, data = df)
s <- summary(fit)$coefficients
row.names(s) <- NULL
out <- data.frame(parameter = c("beta_0", "beta_1"),
Estimate = s[,"Estimate"],
p_val = s[,"Pr(>|t|)"]) \%>\% pivot_longer(
cols = c("Estimate", "p_val"),
names_to = "target")
return(out)
}
method <- simulatr_function(f = fit_lm, packages = "tidyr")

# generate data and run method
df <- generate_lm_data(-2, 2, 1, 100)
lapply(method@packages, require, character.only = TRUE)
fit_lm(df)
}
