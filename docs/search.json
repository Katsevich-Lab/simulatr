[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 simulatr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"/articles/intro-to-simulatr.html","id":"the-conceptual-structure-of-a-numerical-simulation","dir":"Articles","previous_headings":"Simulation structure and workflow","what":"The conceptual structure of a numerical simulation","title":"Introduction to `simulatr`","text":"numerical simulation consists generating B data realizations (data sets) one data-generating distributions, applying one analysis methods data set. data-generating distributions specified problem parameters. combination parameters, called problem setting, gives rise data-generating distribution.","code":""},{"path":"/articles/intro-to-simulatr.html","id":"simulatr-specifier-objects","dir":"Articles","previous_headings":"Simulation structure and workflow","what":"simulatr specifier objects","title":"Introduction to `simulatr`","text":"simulatr, aforementioned components captured simulatr specifier object. object four fields, described : parameter_grid: data frame whose rows correspond problem settings whose columns parameters. fixed_parameters: list parameters applicable problem setting. One special fixed parameter B, number data realizations generate per problem setting. generate_data_function: function takes input problem parameters outputs either (1) one data set (2) B data sets. latter option useful cases data sets faster generate together rather one time. run_method_functions: named list method functions. method function takes input either (1) one data set (2) B data sets outputs data frame least three columns: parameter, target, value. case 2, fourth column called run_id corresponding data realization. variable selection context, parameter store variable tested, target string “p-value”, value p-value variable.","code":""},{"path":"/articles/intro-to-simulatr.html","id":"simulatr-workflow","dir":"Articles","previous_headings":"Simulation structure and workflow","what":"simulatr workflow","title":"Introduction to `simulatr`","text":"Assemble simulation components. First, assemble four objects described previous section. Create simulatr specifier object. Given four simulation components, create simulatr specifier object using simulatr_specifier() function: Check , necessary, update simulatr specifier object. Make sure parts simulatr specifier object working running small portion simulation via check_simulatr_specifier_object() function. function takes arguments simulatr specifier object (simulatr_spec) well number data realizations try (B_in). checking purposes, can use small number B_in like 2 3. errors, simulatr give informative error messages help identify problem. Update simulatr specifier object fix issues. Run simulation. two options running numerical simulation simulatr. can run simulatr either (1) using RStudio (2) using simulatr pipeline, Nextflow pipeline intended distributed computing platforms. Option 1, good small-scale simulations, can done using check_simulatr_specifier_object() function step 3, omitting B_in argument: Option 2, good large-scale simulations, currently available yet documented. Summarize / visualize results. output method realization data set, can summarize results computing quantities like Type-error, mean-squared error, etc.","code":"simulatr_spec <- simulatr_specifier(   parameter_grid,   fixed_parameters,   generate_data_function,    run_method_functions ) check_results <- check_simulatr_specifier_object(simulatr_spec, B_in = 3) simulation_results <- check_simulatr_specifier_object(simulatr_spec)"},{"path":"/articles/intro-to-simulatr.html","id":"example-simulation-with-simulatr","dir":"Articles","previous_headings":"","what":"Example simulation with simulatr","title":"Introduction to `simulatr`","text":"Let’s walk workflow simple example. consider estimating coefficients linear regression model via ordinary least squares lasso, varying number samples.","code":""},{"path":"/articles/intro-to-simulatr.html","id":"assemble-simulation-components","dir":"Articles","previous_headings":"Example simulation with simulatr","what":"1. Assemble simulation components","title":"Introduction to `simulatr`","text":"parameter_grid. problem parameters sample size n, dimension p, number nonzero coefficients s, value nonzero coefficient beta_val. simulation, vary n. therefore put remainder parameters fixed_parameters, avoid problem parameters parameter_grid. fixed_parameters. put number data realizations B seed set simulation. generate_data_function. define data-generation function follows: Additionally, need call simulatr_function() add pieces information simulatr needs. particular, give argument names data-generating function (typically obtained using formalArgs(generate_data_f), ). also let simulatr know whether data-generating function creates just one realization data (loop = TRUE) B time (loop = FALSE). run_method_functions. Let’s define functions OLS lasso: , need call simulatr_function() add pieces information simulatr needs. time, need give arguments method functions except first (data ), usually empty. also let simulatr know whether method functions input just one realization data (loop = TRUE) B time (loop = FALSE). Finally, collate method functions named list. crucial list named.","code":"parameter_grid <- data.frame(   n = c(25, 50, 75, 100),      # sample size   p = 15,                      # dimension   s = 5,                       # number of nonzero coefficients   beta_val = 3                 # value of nonzero coefficients ) fixed_parameters <- list(   B = 10,                      # number of data realizations   seed = 4,                    # seed to set prior to generating data and running methods   n_processors = 1             # necessary argument, but ignore for now ) # define data-generating model based on the Gaussian linear model generate_data_f <- function(n, p, s, beta_val){   X <- matrix(rnorm(n*p), n, p, dimnames = list(NULL, paste0(\"X\", 1:p)))   beta <- numeric(p)   beta[1:s] <- beta_val   y <- X %*% beta + rnorm(n)   data <- list(X = X, y = y)   data } # need to call simulatr_function() to give simulatr a few more pieces of info generate_data_function <- simulatr_function(   f = generate_data_f,                           arg_names = formalArgs(generate_data_f),       loop = TRUE ) # ordinary least squares ols_f <- function(data){   X <- data$X   y <- data$y   lm_fit <- lm(y ~ X - 1)   beta_hat <- coef(lm_fit)   results <- dplyr::tibble(     parameter = colnames(X),      target = \"estimate\",      value = unname(beta_hat))   results }  # lasso lasso_f <- function(data){   X <- data$X   y <- data$y   glmnet_fit <- glmnet::cv.glmnet(x = X, y = y, nfolds = 5, intercept = FALSE)   beta_hat <- glmnet::coef.glmnet(glmnet_fit, s = \"lambda.1se\")   results <- dplyr::tibble(     parameter = colnames(X),      target = \"estimate\",      value = beta_hat[-1])   results } # create simulatr functions ols_spec_f <- simulatr_function(f = ols_f, arg_names = character(0), loop = TRUE) lasso_spec_f <- simulatr_function(f = lasso_f, arg_names = character(0), loop = TRUE) run_method_functions <- list(ols = ols_spec_f, lasso = lasso_spec_f)"},{"path":"/articles/intro-to-simulatr.html","id":"create-a-simulatr-specifier-object","dir":"Articles","previous_headings":"Example simulation with simulatr","what":"2. Create a simulatr specifier object","title":"Introduction to `simulatr`","text":"easiest step; just pass four components function simulatr_specifier():","code":"simulatr_spec <- simulatr_specifier(   parameter_grid,   fixed_parameters,   generate_data_function,    run_method_functions )"},{"path":"/articles/intro-to-simulatr.html","id":"check-and-if-necessary-update-the-simulatr-specifier-object","dir":"Articles","previous_headings":"Example simulation with simulatr","what":"3. Check and, if necessary, update the simulatr specifier object","title":"Introduction to `simulatr`","text":"message tells us simulation encounter errors first two data realizations. free move running full simulation.","code":"check_results <- check_simulatr_specifier_object(simulatr_spec, B_in = 2) #> Generating data... #> Running method 'ols'... #> Running method 'lasso'... #>  #> SUMMARY: The simulatr specifier object is specified correctly!"},{"path":"/articles/intro-to-simulatr.html","id":"run-the-simulation","dir":"Articles","previous_headings":"Example simulation with simulatr","what":"4. Run the simulation","title":"Introduction to `simulatr`","text":"Since example simulation small, can run RStudio: Let’s take look results: see simulatr concatenated results running method data realization (indexed run_id) problem setting (indexed grid_id).","code":"sim_results <- check_simulatr_specifier_object(simulatr_spec) #> Generating data... #> Running method 'ols'... #> Running method 'lasso'... #>  #> SUMMARY: The simulatr specifier object is specified correctly! sim_results$results #> # A tibble: 1,200 × 6 #>    parameter target     value run_id grid_id method #>  * <chr>     <chr>      <dbl>  <int>   <int> <chr>  #>  1 X1        estimate  2.47        1       1 ols    #>  2 X2        estimate  2.99        1       1 ols    #>  3 X3        estimate  3.06        1       1 ols    #>  4 X4        estimate  2.93        1       1 ols    #>  5 X5        estimate  1.87        1       1 ols    #>  6 X6        estimate  0.619       1       1 ols    #>  7 X7        estimate -0.485       1       1 ols    #>  8 X8        estimate  0.0763      1       1 ols    #>  9 X9        estimate -0.309       1       1 ols    #> 10 X10       estimate  0.273       1       1 ols    #> # … with 1,190 more rows"},{"path":"/articles/intro-to-simulatr.html","id":"summarize-andor-visualize-the-results","dir":"Articles","previous_headings":"Example simulation with simulatr","what":"5. Summarize and/or visualize the results","title":"Introduction to `simulatr`","text":"Suppose wish compute RMSE estimating first variable:","code":"sim_results$results |>   left_join(parameter_grid |> mutate(grid_id = row_number()),             by = \"grid_id\") |>   filter(parameter == \"X1\",           target == \"estimate\") |>   group_by(grid_id, method, n) |>   summarise(RMSE = mean((value - beta_val)^2), .groups = \"drop\") |>   ggplot(aes(x = n, y = RMSE, colour = method)) +   geom_point() +    geom_line() +    labs(x = \"Sample size\",        y = expression(paste(\"RMSE for \", beta[1]))) +    theme(legend.position = \"bottom\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Barry. Author, maintainer. Eugene Katsevich. Author, thesis advisor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barry T, Katsevich E (2023). simulatr: Design Portable Scalable Simulation Studies. R package version 0.0.0.9000.","code":"@Manual{,   title = {simulatr: Design Portable and Scalable Simulation Studies},   author = {Timothy Barry and Eugene Katsevich},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"simulatr-write-portable-and-scalable-simulation-code","dir":"","previous_headings":"","what":"Design Portable and Scalable Simulation Studies","title":"Design Portable and Scalable Simulation Studies","text":"Simulation studies play crucial role development assessment statistical methods. However, writing portable scalable simulation code challenging. Simulatr decouples specification simulation execution simulation, enabling users develop simulation study laptop seamlessly run simulation -scale distributed computing platform. Supported platforms include high-performance computing clusters cloud computing services (e.g., Microsoft Azure, Amazon Web Services, etc.). Please visit simulatr-command-line repository download simulatr command line tool. Note: package experimental active development. Use caution.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Design Portable and Scalable Simulation Studies","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"timothy-barry/simulatr\")"},{"path":"/reference/check_simulatr_specifier_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Check simulatr specifier object — check_simulatr_specifier_object","title":"Check simulatr specifier object — check_simulatr_specifier_object","text":"Checks simulatr specifier object correctness.","code":""},{"path":"/reference/check_simulatr_specifier_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check simulatr specifier object — check_simulatr_specifier_object","text":"","code":"check_simulatr_specifier_object(simulatr_spec, B_in = NULL, parallel = TRUE)"},{"path":"/reference/check_simulatr_specifier_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check simulatr specifier object — check_simulatr_specifier_object","text":"simulatr_spec simulatr_specifier object B_in (default determined simulatr_spec) number resamples use parallel (default true) parallelize execution?","code":""},{"path":"/reference/check_simulatr_specifier_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check simulatr specifier object — check_simulatr_specifier_object","text":"errors, list results; errors occur, ordered list arguments passed function error occurred.","code":""},{"path":"/reference/check_simulatr_specifier_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check simulatr specifier object — check_simulatr_specifier_object","text":"","code":"if (FALSE) { simulatr_spec <- readRDS(\"/Users/timbarry/research_offsite/glmeiv/private/simulations/sim_spec_1.rds\") simulatr_spec@parameter_grid  <- simulatr_spec@parameter_grid[1:10,] simulatr_spec@fixed_parameters[[\"n\"]] <- 2000 check <- check_simulatr_specifier_object(simulatr_spec, 5) }"},{"path":"/reference/collate_result_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Collate result list — collate_result_list","title":"Collate result list — collate_result_list","text":"Collate result list","code":""},{"path":"/reference/collate_result_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collate result list — collate_result_list","text":"","code":"collate_result_list(result_df, proc_id, row_idx, method)"},{"path":"/reference/collate_result_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collate result list — collate_result_list","text":"result_df data frame outputted method function proc_id processor id row_idx row parameter grid method string giving method","code":""},{"path":"/reference/collate_result_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collate result list — collate_result_list","text":"collated data frame","code":""},{"path":"/reference/compute_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute bias — compute_bias","title":"Compute bias — compute_bias","text":"Computes bias estimator.","code":""},{"path":"/reference/compute_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute bias — compute_bias","text":"","code":"compute_bias(tbl, key, sim_spec)"},{"path":"/reference/compute_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute bias — compute_bias","text":"tbl data frame columns target value. Target entry \"estimate.\" key data frame columns parameter grid_row_id sim_spec simulatr specifier object","code":""},{"path":"/reference/compute_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute bias — compute_bias","text":"1-row tibble columns value, lower_mc_ci, upper_mc_ci","code":""},{"path":"/reference/compute_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute coverage — compute_coverage","title":"Compute coverage — compute_coverage","text":"Compute coverage","code":""},{"path":"/reference/compute_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute coverage — compute_coverage","text":"","code":"compute_coverage(tbl, key, sim_spec)"},{"path":"/reference/compute_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute coverage — compute_coverage","text":"tbl data frame columns target, value, id. Column \"target\" entries \"confint_lower\" \"confint_higher\" key data frame columns parameter grid_row_id sim_spec simulatr specifier object","code":""},{"path":"/reference/compute_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute coverage — compute_coverage","text":"1-row tibble columns value, lower_mc_ci, upper_mc_ci","code":""},{"path":"/reference/compute_mse.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute mean squared error — compute_mse","title":"Compute mean squared error — compute_mse","text":"Computes MSE estimator.","code":""},{"path":"/reference/compute_mse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute mean squared error — compute_mse","text":"","code":"compute_mse(tbl, key, sim_spec)"},{"path":"/reference/compute_mse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute mean squared error — compute_mse","text":"tbl similar bias key similar bias sim_spec similar bias","code":""},{"path":"/reference/compute_mse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute mean squared error — compute_mse","text":"similar bias","code":""},{"path":"/reference/compute_rejection_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes rejection probability — compute_rejection_probability","title":"Computes rejection probability — compute_rejection_probability","text":"Rejection probability type-error (null) type-II error (alternative)","code":""},{"path":"/reference/compute_rejection_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes rejection probability — compute_rejection_probability","text":"","code":"compute_rejection_probability(tbl, threshold)"},{"path":"/reference/compute_rejection_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes rejection probability — compute_rejection_probability","text":"tbl data frame columns target, value, id. Column \"target\" entry \"p_value.\" threshold rejection threshold","code":""},{"path":"/reference/compute_rejection_probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes rejection probability — compute_rejection_probability","text":"1-row tibble columns value, lower_mc_ci, upper_mc_ci","code":""},{"path":"/reference/compute_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute se — compute_se","title":"Compute se — compute_se","text":"Compute se","code":""},{"path":"/reference/compute_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute se — compute_se","text":"","code":"compute_se(tbl)"},{"path":"/reference/compute_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute se — compute_se","text":"tbl similar bias","code":""},{"path":"/reference/compute_se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute se — compute_se","text":"similar bias","code":""},{"path":"/reference/create_param_grid_fractional_factorial.html","id":null,"dir":"Reference","previous_headings":"","what":"Create param grid — create_param_grid_fractional_factorial","title":"Create param grid — create_param_grid_fractional_factorial","text":"Creates parameter grid. variable, varies value variable holding variables constant specified value.","code":""},{"path":"/reference/create_param_grid_fractional_factorial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create param grid — create_param_grid_fractional_factorial","text":"","code":"create_param_grid_fractional_factorial(varying_values, baseline_values)"},{"path":"/reference/create_param_grid_fractional_factorial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create param grid — create_param_grid_fractional_factorial","text":"varying_values named list giving values vary variables baseline_values baseline values variables; variables take value varying","code":""},{"path":"/reference/create_param_grid_fractional_factorial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create param grid — create_param_grid_fractional_factorial","text":"parameter grid","code":""},{"path":"/reference/create_param_grid_fractional_factorial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create param grid — create_param_grid_fractional_factorial","text":"","code":"varying_values <- list(x = seq(-2,2,0.1), y = seq(0,2,0.1), z = c(\"cond1\", \"cond2\")) baseline_values <- list(x = 0, y = 0.5, z = \"cond1\") param_df <- create_param_grid_fractional_factorial(varying_values, baseline_values)"},{"path":"/reference/create_param_grid_two_way_factorial.html","id":null,"dir":"Reference","previous_headings":"","what":"Create param grid (two way factorial) — create_param_grid_two_way_factorial","title":"Create param grid (two way factorial) — create_param_grid_two_way_factorial","text":"Create param grid (two way factorial)","code":""},{"path":"/reference/create_param_grid_two_way_factorial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create param grid (two way factorial) — create_param_grid_two_way_factorial","text":"","code":"create_param_grid_two_way_factorial(param_vals, arm_names, arm_param)"},{"path":"/reference/create_param_grid_two_way_factorial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create param grid (two way factorial) — create_param_grid_two_way_factorial","text":"param_vals named list length two, giving values vary arm_names names arms arm_param parameter use assign arm names","code":""},{"path":"/reference/create_param_grid_two_way_factorial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create param grid (two way factorial) — create_param_grid_two_way_factorial","text":"parameter grid","code":""},{"path":"/reference/create_param_grid_two_way_factorial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create param grid (two way factorial) — create_param_grid_two_way_factorial","text":"","code":"param_vals <- list(g_perturbation = seq(0.5, 6, 0.5), pi = seq(0.1, 0.3, 0.1)) arm_names <- c(\"pi_small\", \"pi_intermediate\", \"pi_big\") arm_param <- \"pi\" create_param_grid_two_way_factorial(param_vals, arm_names, arm_param) #>    g_perturbation  pi arm_pi_big arm_pi_intermediate arm_pi_small grid_id #> 1             0.5 0.1      FALSE               FALSE         TRUE       1 #> 2             1.0 0.1      FALSE               FALSE         TRUE       2 #> 3             1.5 0.1      FALSE               FALSE         TRUE       3 #> 4             2.0 0.1      FALSE               FALSE         TRUE       4 #> 5             2.5 0.1      FALSE               FALSE         TRUE       5 #> 6             3.0 0.1      FALSE               FALSE         TRUE       6 #> 7             3.5 0.1      FALSE               FALSE         TRUE       7 #> 8             4.0 0.1      FALSE               FALSE         TRUE       8 #> 9             4.5 0.1      FALSE               FALSE         TRUE       9 #> 10            5.0 0.1      FALSE               FALSE         TRUE      10 #> 11            5.5 0.1      FALSE               FALSE         TRUE      11 #> 12            6.0 0.1      FALSE               FALSE         TRUE      12 #> 13            0.5 0.2      FALSE                TRUE        FALSE      13 #> 14            1.0 0.2      FALSE                TRUE        FALSE      14 #> 15            1.5 0.2      FALSE                TRUE        FALSE      15 #> 16            2.0 0.2      FALSE                TRUE        FALSE      16 #> 17            2.5 0.2      FALSE                TRUE        FALSE      17 #> 18            3.0 0.2      FALSE                TRUE        FALSE      18 #> 19            3.5 0.2      FALSE                TRUE        FALSE      19 #> 20            4.0 0.2      FALSE                TRUE        FALSE      20 #> 21            4.5 0.2      FALSE                TRUE        FALSE      21 #> 22            5.0 0.2      FALSE                TRUE        FALSE      22 #> 23            5.5 0.2      FALSE                TRUE        FALSE      23 #> 24            6.0 0.2      FALSE                TRUE        FALSE      24 #> 25            0.5 0.3       TRUE               FALSE        FALSE      25 #> 26            1.0 0.3       TRUE               FALSE        FALSE      26 #> 27            1.5 0.3       TRUE               FALSE        FALSE      27 #> 28            2.0 0.3       TRUE               FALSE        FALSE      28 #> 29            2.5 0.3       TRUE               FALSE        FALSE      29 #> 30            3.0 0.3       TRUE               FALSE        FALSE      30 #> 31            3.5 0.3       TRUE               FALSE        FALSE      31 #> 32            4.0 0.3       TRUE               FALSE        FALSE      32 #> 33            4.5 0.3       TRUE               FALSE        FALSE      33 #> 34            5.0 0.3       TRUE               FALSE        FALSE      34 #> 35            5.5 0.3       TRUE               FALSE        FALSE      35 #> 36            6.0 0.3       TRUE               FALSE        FALSE      36"},{"path":"/reference/get_example_simulatr_specifier.html","id":null,"dir":"Reference","previous_headings":"","what":"get example simulatr_specifier — get_example_simulatr_specifier","title":"get example simulatr_specifier — get_example_simulatr_specifier","text":"get example simulatr_specifier","code":""},{"path":"/reference/get_example_simulatr_specifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get example simulatr_specifier — get_example_simulatr_specifier","text":"","code":"get_example_simulatr_specifier()"},{"path":"/reference/get_example_simulatr_specifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get example simulatr_specifier — get_example_simulatr_specifier","text":"example simulatr specifier object","code":""},{"path":"/reference/get_memory_used.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute memory used since last call to gc(reset = TRUE) — get_memory_used","title":"Compute memory used since last call to gc(reset = TRUE) — get_memory_used","text":"Compute memory used since last call gc(reset = TRUE)","code":""},{"path":"/reference/get_memory_used.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute memory used since last call to gc(reset = TRUE) — get_memory_used","text":"","code":"get_memory_used()"},{"path":"/reference/get_memory_used.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute memory used since last call to gc(reset = TRUE) — get_memory_used","text":"Number bytes used","code":""},{"path":"/reference/get_param_from_simulatr_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameter from simulatr_specifier object — get_param_from_simulatr_spec","title":"Get parameter from simulatr_specifier object — get_param_from_simulatr_spec","text":"Returns requested parameter simulatr_specifier object.","code":""},{"path":"/reference/get_param_from_simulatr_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameter from simulatr_specifier object — get_param_from_simulatr_spec","text":"","code":"get_param_from_simulatr_spec(simulatr_spec, row_idx, param)"},{"path":"/reference/get_param_from_simulatr_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameter from simulatr_specifier object — get_param_from_simulatr_spec","text":"simulatr_spec simulatr_specifier object row_idx index giving row parameter grid; NULL, returns values (parameter stored grid) fixed value (parameter stored fixed params list) param name parameter","code":""},{"path":"/reference/get_param_from_simulatr_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameter from simulatr_specifier object — get_param_from_simulatr_spec","text":"value requested parameter","code":""},{"path":"/reference/get_param_from_simulatr_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get parameter from simulatr_specifier object — get_param_from_simulatr_spec","text":"parameter present parameter grid fixed parameter list, returns value parameter grid. parameter present either, throws error.","code":""},{"path":"/reference/get_params_for_nextflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Get params for nextflow — get_params_for_nextflow","title":"Get params for nextflow — get_params_for_nextflow","text":"Given file path fp, writes parameters nextflow needs access plain text file stored fp.","code":""},{"path":"/reference/get_params_for_nextflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get params for nextflow — get_params_for_nextflow","text":"","code":"get_params_for_nextflow(simulatr_spec, fp, B_in)"},{"path":"/reference/get_params_for_nextflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get params for nextflow — get_params_for_nextflow","text":"simulatr_spec simulatr_specification object fp file path B_in value B passed command line; B = 0 indicates argument passed","code":""},{"path":"/reference/get_params_for_nextflow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get params for nextflow — get_params_for_nextflow","text":"Parameters separated line. line form \"param:value,\" \"param\" name parameter \"value\" value.","code":""},{"path":"/reference/setup_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup script — setup_script","title":"Setup script — setup_script","text":"Runs setup either generate_data.R script run_methods.R script. script ) sets seed (global side-effect) ii) updates value B, B !=0 (default) iii) obtains ordered set arguments","code":""},{"path":"/reference/setup_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup script — setup_script","text":"","code":"setup_script(simulatr_spec, B_in, function_object, row_idx)"},{"path":"/reference/setup_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup script — setup_script","text":"simulatr_spec simulation specifier object B_in B set (0 means update) function_object either method data generation simulatr_function object row_idx row index parameter grid","code":""},{"path":"/reference/setup_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup script — setup_script","text":"list B-updated sim_spec object ordered list args","code":""},{"path":"/reference/simulatr.html","id":null,"dir":"Reference","previous_headings":"","what":"simulatr: A package that powers portable and scalable simulation studies — simulatr","title":"simulatr: A package that powers portable and scalable simulation studies — simulatr","text":"Simulation studies play crucial role development assessment statistical methods. However, writing portable scalable simulation code can challenging. Simulatr decouples specification simulation execution simulation, enabling users develop simulation study laptop seamlessly run simulation -scale distributed computing platform. Supported platforms include high-performance computing clusters cloud computing services (e.g., Microsoft Azure, Amazon Web Services, etc.).","code":""},{"path":"/reference/simulatr_function.html","id":null,"dir":"Reference","previous_headings":"","what":"simulatr_function — simulatr_function","title":"simulatr_function — simulatr_function","text":"simulator_function class stores method data generation function alongside associated metadata.","code":""},{"path":"/reference/simulatr_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simulatr_function — simulatr_function","text":"","code":"simulatr_function(   f,   arg_names = NA_character_,   packages = NA_character_,   loop = FALSE,   one_rep_time = NA_real_,   mult_time_factor = 2,   add_time_factor = 60 )"},{"path":"/reference/simulatr_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simulatr_function — simulatr_function","text":"f function one arguments. arg_names (ordered) names parameters (parameter grid list fixed parameters) pass f. packages packages load calling f, stored character vector. loop boolean indicating whether f called within loop. one_rep_time amount time takes function exeecute setting B = 1 (optional) mult_time_factor time requested given function (one_rep_time)(B)(mult_time_factor)/n_processors + add_time_factor add_time_factor see ","code":""},{"path":"/reference/simulatr_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simulatr_function — simulatr_function","text":"simulatr_function object","code":""},{"path":"/reference/simulatr_specifier.html","id":null,"dir":"Reference","previous_headings":"","what":"simulatr_specifier — simulatr_specifier","title":"simulatr_specifier — simulatr_specifier","text":"simulatr_specifier object defines simulation study simulatr framework.","code":""},{"path":"/reference/simulatr_specifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simulatr_specifier — simulatr_specifier","text":"","code":"simulatr_specifier(   parameter_grid,   fixed_parameters,   generate_data_function,   run_method_functions )"},{"path":"/reference/simulatr_specifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simulatr_specifier — simulatr_specifier","text":"parameter_grid named data frame storing values study parameters vary fixed_parameters named list storing values parameters stay fixed across parameter settings generate_data_function simulatr_function generates data run_method_functions named list simulatr_functions define methods run simulation","code":""},{"path":"/reference/simulatr_specifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simulatr_specifier — simulatr_specifier","text":"simulatr_specifier object","code":""},{"path":"/reference/summarize_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize results — summarize_results","title":"Summarize results — summarize_results","text":"Summarizes results simulatr simulation.","code":""},{"path":"/reference/summarize_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize results — summarize_results","text":"","code":"summarize_results(sim_spec, sim_res, metrics, parameters, threshold = 0.05)"},{"path":"/reference/summarize_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize results — summarize_results","text":"sim_spec simulatr_specifier object sim_res data frame raw results, outputted simulatr metrics character vector metrics compute; options include \"coverage,\" \"bias,\" \"se\" (standard deviation estimator), \"mse\", \"rejection_probability,\" \"count,\" \"time.\" parameters character vector parameters compute metrics threshold (optional; default value 0.05) rejection threshold use \"rejection_probability\" metric.","code":""},{"path":"/reference/summarize_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize results — summarize_results","text":"data frame summarized results","code":""},{"path":"/reference/update_B_sim_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Update B in a simulatr_specifier object — update_B_sim_spec","title":"Update B in a simulatr_specifier object — update_B_sim_spec","text":"Takes simulatr_specifier object value B; updates B return new object.","code":""},{"path":"/reference/update_B_sim_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update B in a simulatr_specifier object — update_B_sim_spec","text":"","code":"update_B_sim_spec(simulatr_spec, B)"},{"path":"/reference/update_B_sim_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update B in a simulatr_specifier object — update_B_sim_spec","text":"simulatr_spec simulatr specifier object B new value B","code":""},{"path":"/reference/update_B_sim_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update B in a simulatr_specifier object — update_B_sim_spec","text":"updated simulatr_specifier object","code":""}]
